# Object Oriented paradigm builds upon procedural paradigm but builds around data
# Shift focus from process of computation to data on which computations use as input/output

# Code should be structured such that all data related to the same OBJECT, and code used 
# to represent the BEHAVIOUR of the object should be stored together.

# A CLASS is a template describing structure of data and the code needed to represent 
# the structure of the data.

# Example
# lists 
# Lists are a class 
# They contain data -- e,g. strings
# They also contain functions that describe the behaviour of strings

# On my own words: 
# A class is a template to define an object with a set of attributes, and methods and properties 
# (functions that act like attributes) that act on those attributes

Why is this useful?
Since a class is a template, we know that all objects are are instances of 
that class have the same structure.

NB: 
Default methods are called INSTANCE methods - modifies the object attributes
There are also CLASS methods - modifies the class attributes
and 
STATIC methods - modifies attributes that are independent of the object or class